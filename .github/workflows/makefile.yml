name: Nabula Kernel Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Build timeout

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive  # Important for kernel sources

    - name: Set up build environment
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          git-core gnupg flex bison build-essential zip curl zlib1g-dev \
          gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev \
          x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev \
          libxml2-utils xsltproc unzip fontconfig python3 bc rsync \
          libssl-dev kmod cpio

    - name: Set up Clang toolchain
      run: |
        mkdir -p toolchains
        cd toolchains
        git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang-17
        git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 gcc
        export PATH=$(pwd)/clang-17/bin:$(pwd)/gcc/bin:$PATH
        export ARCH=arm64
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=aarch64-linux-android-
        export LLVM=1
        export LLVM_IAS=1
        cd ..

    - name: Build kernel with Clang
      run: |
        make O=out clean
        make O=out nabula_defconfig
        make O=out CC=clang -j$(nproc) 2>&1 | tee build.log

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nabula-kernel-build
        path: |
          out/arch/arm64/boot/Image.gz-dtb
          out/arch/arm64/boot/dtbo.img
          out/.config
          build.log
