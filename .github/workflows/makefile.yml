name: Build Kernel for Poco X4 Pro

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git curl build-essential bc python3 openjdk-11-jdk

      - name: Clone kernel source
        run: |
          git clone --depth=1 https://github.com/MiCode/Xiaomi_Kernel_OpenSource -b veux-r-oss kernel_source

      - name: Download toolchain
        run: |
          mkdir -p toolchain
          curl -L https://github.com/anon2387/aarch64-linux-android-gnu-toolchain/releases/latest/download/toolchain.tar.gz | tar xz -C toolchain --strip-components=1

      - name: Integrate KernelSU Next
        working-directory: kernel_source
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s v0.9.5
          for cfg in CONFIG_KPROBES=y CONFIG_HAVE_KPROBES=y CONFIG_KPROBE_EVENTS=y CONFIG_MODULES=y; do
            grep -q "^$cfg" arch/arm64/configs/qgki_defconfig || echo "$cfg" >> arch/arm64/configs/qgki_defconfig
          done

      - name: Build kernel
        working-directory: kernel_source
        env:
          PATH: ${{ github.workspace }}/toolchain/bin:${PATH}
        run: |
          make O=../out ARCH=arm64 qgki_defconfig
          make -j$(nproc) O=../out ARCH=arm64 CC=aarch64-linux-gnu-gcc

            - name: Upload artifacts (Image.gz)
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: out/arch/arm64/boot/Image.gz


      # Optional: step for AnyKernel3 packaging, release, or flashing instructions can be added here
      
