name: Build Kkernel for Poco X4 Pro (veux) with KernelSU Next

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      KERNEL_SOURCE: https://github.com/MiCode/Xiaomi_Kernel_OpenSource
      KERNEL_BRANCH: veux-r-oss
      DEFCONFIG: qgki_defconfig
      KERNSU_VERSION: v0.9.5
      TOOLCHAIN_URL: https://github.com/anon2387/aarch64-linux-android-gnu-toolchain/releases/latest/download/toolchain.tar.gz
      TOOLCHAIN_DIR: ${{ github.workspace }}/toolchain
      BUILD_OUTPUT: ${{ github.workspace }}/out

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install -y git curl build-essential bc python3 openjdk-11-jdk

      - name: Download ARM64 cross-compiler toolchain
        run: |
          mkdir -p ${{ env.TOOLCHAIN_DIR }}
          curl -L ${{ env.TOOLCHAIN_URL }} | tar xz -C ${{ env.TOOLCHAIN_DIR }} --strip-components=1

      - name: Clone kernel source
        run: |
          git clone --depth=1 -b ${{ env.KERNEL_BRANCH }} ${{ env.KERNEL_SOURCE }} kernel_source

      - name: Integrate KernelSU Next
        working-directory: kernel_source
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s ${{ env.KERNSU_VERSION }}
          # Enable necessary config options for KernelSU
          for cfg in CONFIG_KPROBES=y CONFIG_HAVE_KPROBES=y CONFIG_KPROBE_EVENTS=y CONFIG_MODULES=y; do
            grep -q "^$cfg" arch/arm64/configs/${{ env.DEFCONFIG }} || echo "$cfg" >> arch/arm64/configs/${{ env.DEFCONFIG }}
          done

      - name: Build kernel
        working-directory: kernel_source
        env:
          PATH: ${{ env.TOOLCHAIN_DIR }}/bin:${{ env.PATH }}
        run: |
          make O=${{ env.BUILD_OUTPUT }} ARCH=arm64 ${{ env.DEFCONFIG }}
          make -j$(nproc) O=${{ env.BUILD_OUTPUT }} ARCH=arm64 CC=aarch64-linux-gnu-gcc

      - name: Upload kernel Image.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: out/arch/arm64/boot/Image.gz

      # Optional: Add steps here to package with AnyKernel3 or create a release.

      - name: Summary message
        run: |
          echo "Kernel build complete! Download the kernel image artifact from this run."
          echo "Remember to manually install the KernelSU Next Manager APK on your device."
          
