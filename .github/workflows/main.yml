name: Kernel Build with LLVM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install LLVM Toolchain
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-15 \
          lld-15 \
          llvm-15 \
          llvm-15-tools \  # This includes llvm-ar, llvm-nm, etc.
          libncurses-dev \
          bison flex \
          libssl-dev \
          libelf-dev \
          bc \
          make \
          git \
          crossbuild-essential-arm64 \
          ccache

    - name: Set Up Environment
      run: |
        echo "CC=clang-15" >> $GITHUB_ENV
        echo "LD=ld.lld-15" >> $GITHUB_ENV
        echo "AR=llvm-ar-15" >> $GITHUB_ENV  # Explicitly use versioned llvm-ar
        echo "NM=llvm-nm-15" >> $GITHUB_ENV
        echo "OBJCOPY=llvm-objcopy-15" >> $GITHUB_ENV
        echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV

    - name: Build Kernel
      run: |
        make -j$(nproc) \
          ARCH=$ARCH \
          CC="$CC" \
          LD="$LD" \
          AR="$AR" \
          NM="$NM" \
          OBJCOPY="$OBJCOPY" \
          CROSS_COMPILE="$CROSS_COMPILE" \
          LLVM=1 \
          LLVM_IAS=1 \
          vendor/veux-qgki_defconfig all Image.gz dtbs

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ github.sha }}
        path: |
          arch/$ARCH/boot/Image.gz
          arch/$ARCH/boot/dts/**/*.dtb
          System.map
          .config
