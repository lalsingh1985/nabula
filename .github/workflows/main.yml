name: Fast Kernel Build with Clang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CC: clang
  LD: ld.lld
  AR: llvm-ar
  NM: llvm-nm
  OBJCOPY: llvm-objcopy
  CROSS_COMPILE: aarch64-linux-gnu-
  ARCH: arm64

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache dependencies
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          /var/lib/apt/lists/*
          /var/cache/apt/*
        key: ${{ runner.os }}-apt-${{ hashFiles('**/Makefile') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install dependencies (cached)
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          clang lld llvm \
          libncurses-dev \
          bison flex \
          libssl-dev \
          libelf-dev \
          bc \
          make \
          git \
          crossbuild-essential-arm64

    - name: Configure kernel
      run: |
        make ${{ env.ARCH }}=$ARCH CC=$CC LD=$LD vendor/veux-qgki_defconfig

    - name: Build kernel
      run: |
        make -j$(($(nproc) + 1)) \
          ARCH=$ARCH \
          CC=$CC \
          LD=$LD \
          AR=$AR \
          NM=$NM \
          OBJCOPY=$OBJCOPY \
          CROSS_COMPILE=$CROSS_COMPILE \
          Image.gz dtbs

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clang-kernel-build
        path: |
          arch/${{ env.ARCH }}/boot/Image.gz
          arch/${{ env.ARCH }}/boot/dts/**/*.dtb
          System.map
          .config
