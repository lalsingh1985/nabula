name: Kernel Build with Clang

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full clone for version generation

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang lld llvm \
          libncurses-dev \
          bison flex \
          libssl-dev \
          libelf-dev \
          bc \
          make \
          git

    - name: Set up Clang environment
      run: |
        echo "CC=clang" >> $GITHUB_ENV
        echo "LD=ld.lld" >> $GITHUB_ENV
        echo "AR=llvm-ar" >> $GITHUB_ENV
        echo "NM=llvm-nm" >> $GITHUB_ENV
        echo "OBJCOPY=llvm-objcopy" >> $GITHUB_ENV

    - name: Configure kernel
      run: |
        make ARCH=arm64 CC=clang LD=ld.lld vendor/veux-qgki_defconfig

    - name: Build kernel
      run: |
        make -j$(nproc) ARCH=arm64 \
          CC=clang \
          LD=ld.lld \
          AR=llvm-ar \
          NM=llvm-nm \
          OBJCOPY=llvm-objcopy \
          CROSS_COMPILE=aarch64-linux-gnu- \
          Image.gz dtbs

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clang-kernel-build
        path: |
          arch/arm64/boot/Image.gz
          arch/arm64/boot/dts/**/*.dtb
          System.map
          .config
